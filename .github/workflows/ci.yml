name: ci-cd-security
on:
  push:
  pull_request:

jobs:
  test:
    name: Unit tests (pytest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 02-seguranca-containers
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -q

  build_and_scan_image:
    name: Build Docker & Trivy (fail on CRITICAL)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t devsecops-app ./02-seguranca-containers

      - name: Trivy image scan (CRITICAL -> fail)
        uses: aquasecurity/trivy-action@0.22.0
        with:
          scan-type: 'image'
          image-ref: 'devsecops-app:latest'
          severity: 'CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'

      - name: Upload Trivy SARIF
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  dependency_check:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Run Dependency-Check (SARIF)
        run: |
          mkdir -p reports
          docker run --rm \
            -v "$PWD":/src -v "$PWD/reports":/report \
            owasp/dependency-check:latest \
            --scan /src/02-seguranca-containers \
            --format "SARIF" --out /report --project "devsecops-app"
      - name: Upload Dependency-Check SARIF
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/dependency-check-report.sarif
      - name: Upload reports artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: reports/

  sonar:
    name: SonarQube scan (conditional)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        if: ${{ env.SONAR_TOKEN != '' && env.SONAR_HOST_URL != '' }}
        uses: SonarSource/sonarqube-scan-action@v3
        with:
          args: >
            -Dsonar.projectKey=devsecops-practical-tests
            -Dsonar.projectName=devsecops-practical-tests
            -Dsonar.sources=02-seguranca-containers
            -Dsonar.python.version=3.11
